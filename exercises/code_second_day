# 2022, Y

# question 2:
# a.
# def listGreatest(l):
#     l.sort(reverse=True)
#     return [l[0], l[1], l[2]]
#



# b.
# def findGreatest(n):
#     n_list = []
#     for i in range(n):
#         n_list.append(int(input("give me a positive integer: ")))
#     print(n_list)
#     l_great = listGreatest(n_list)
#     # print(l_great[::-1])  # [10, 33, 58]
#     l_great.reverse()
#     print(l_great)
#
#
#
#
# # main
# findGreatest(5)
#


# alternative answear to a.
# def listGreatest_alt(nums):
#     big_1, big_2, big_3 = 0, 0, 0
#     for num in nums:
#         if num > big_1 and num > big_2 and num > big_3:
#             big_3 = big_2
#             big_2 = big_1
#             big_1 = num
#
#         elif num > big_2 and num > big_3:
#             big_3 = big_2
#             big_2 = num
#         elif num > big_3:
#             big_3 = num
#
#     return [big_1, big_2, big_3]



##### examples of concepts and other thing we explained regarding functions and dictionaries: #####
# ex2:
# number_word = input("enter a value: ")
# word_numbers = ["five", "four", "three", "two", "one"]
# numbers = [5, 4, 3, 2, 1]
# for word, number in zip(word_numbers, numbers):  # word = five, number = 5 #
#     if word == number_word:  # word = four, number = 4...
#         print(number)

# h(z) = 5z + 6, f(4) = 20.
# f(x, y) = 3x + 2y
# input, output.

# option 1:
def func_a():
    print("a")


def func_b():
    print("b")


# option 1.
def print_list_odd(l):
    for i in range(1, len(l), 2):
        print(i, end=" ")
    func_a()


# option 2.
def sort_list(l):
    l.sort(reverse=False)

def f(t):
    return 5


# main:
z = f(1)

a = [1, 2, 3, 4]
print_list_odd(a)
# func_a()
# func_b()
# print(f(1))

unordered = [4, 2, -1]
print("before:", unordered)
sort_list(unordered)
print("after:", unordered)

dict_ = {1: [2, 3, 4], 2: "two"}
print(dict_[1][2])








